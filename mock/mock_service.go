// Code generated by MockGen. DO NOT EDIT.
// Source: C:\Users\Lenovo\Documents\GitHub\week-6-assignment-reyyansarikaya\service\service.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIWalletService is a mock of IWalletService interface.
type MockIWalletService struct {
	ctrl     *gomock.Controller
	recorder *MockIWalletServiceMockRecorder
}

// MockIWalletServiceMockRecorder is the mock recorder for MockIWalletService.
type MockIWalletServiceMockRecorder struct {
	mock *MockIWalletService
}

// NewMockIWalletService creates a new mock instance.
func NewMockIWalletService(ctrl *gomock.Controller) *MockIWalletService {
	mock := &MockIWalletService{ctrl: ctrl}
	mock.recorder = &MockIWalletServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIWalletService) EXPECT() *MockIWalletServiceMockRecorder {
	return m.recorder
}

// CreateWallet mocks base method.
func (m *MockIWalletService) CreateWallet(arg0 string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateWallet", arg0)
	ret0, _ := ret[0].(string)
	return ret0
}

// CreateWallet indicates an expected call of CreateWallet.
func (mr *MockIWalletServiceMockRecorder) CreateWallet(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateWallet", reflect.TypeOf((*MockIWalletService)(nil).CreateWallet), arg0)
}

// OneUserWallet mocks base method.
func (m *MockIWalletService) OneUserWallet(arg0 string) (int, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "OneUserWallet", arg0)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// OneUserWallet indicates an expected call of OneUserWallet.
func (mr *MockIWalletServiceMockRecorder) OneUserWallet(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "OneUserWallet", reflect.TypeOf((*MockIWalletService)(nil).OneUserWallet), arg0)
}

// ShowAllWallets mocks base method.
func (m *MockIWalletService) ShowAllWallets() map[string]int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ShowAllWallets")
	ret0, _ := ret[0].(map[string]int)
	return ret0
}

// ShowAllWallets indicates an expected call of ShowAllWallets.
func (mr *MockIWalletServiceMockRecorder) ShowAllWallets() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ShowAllWallets", reflect.TypeOf((*MockIWalletService)(nil).ShowAllWallets))
}

// UpdateWallet mocks base method.
func (m *MockIWalletService) UpdateWallet(arg0 string, arg1 int) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateWallet", arg0, arg1)
	ret0, _ := ret[0].(string)
	return ret0
}

// UpdateWallet indicates an expected call of UpdateWallet.
func (mr *MockIWalletServiceMockRecorder) UpdateWallet(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateWallet", reflect.TypeOf((*MockIWalletService)(nil).UpdateWallet), arg0, arg1)
}
